<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>
	<bean id="queryContainer" class="ideasw.secopre.sql.QueryContainer">
		<property name="queries">
			<props>
						
				<prop key="GET_FORMALITY_FROM_USER_ID">
					<![CDATA[
						SELECT DISTINCT (T.ID) AS FORMALITY_ID, T.F_DESC AS DESCRIPTION, T.WORKFLOW_ID, T.AUTHORIZATION_ID, T.CODE FROM (
							SELECT F.ID,
								   F.DESCRIPTION F_DESC,
								   F.WORKFLOW_ID,
								   F.AUTHORIZATION_ID,
								   F.CODE,
								   W.DESCRIPTION WF_DESC,
								   W.FIRST_STAGE_CFG,
								   SCR.ROLE_ID,
								   R.ROLENAME
							  FROM secopre.FORMALITY F,
							  	   secopre.WORKFLOW W,
							  	   secopre.STAGE_CONFIG_ROLE SCR,
							  	   secopre.ROLE R,
							  	   secopre.USER_ROLE UR
							 WHERE F.WORKFLOW_ID = W.ID
							   AND W.FIRST_STAGE_CFG = SCR.STAGE_CONFIG_ID
							   AND SCR.ROLE_ID = R.ID
							   AND R.ID = UR.ROLE_ID
							   AND UR.USER_ID = :userId
							) T
					]]>
				</prop>	
				
				<prop key="GET_REQUEST_NEXT_CONSECUTIVE">
					<![CDATA[
						SELECT IFNULL( (MAX(id) + 1), 1) as CONSECUTIVE FROM secopre.REQUEST;
					]]>
				</prop>
				
				<prop key="GET_FORMALITY_BY_ID">
					<![CDATA[
						SELECT ID AS FORMALITY_ID,
							   DESCRIPTION,
							   WORKFLOW_ID,
							   LAST_UPDATE,
							   ACTIVE, 
							   AUTHORIZATION_ID,
							   CODE
					      FROM secopre.FORMALITY WHERE ID = :formalityId
					]]>
				</prop>		
				
				<prop key="INSERT_REQUEST_CONFIG">
					<![CDATA[
						INSERT INTO secopre.REQUEST_CONFIG
						(REQUEST_ID, FORMALITY_ID, WORKFLOW_ID, LAST_UPDATE, ACTIVE, AUTHORIZATION_ID)
						VALUES
						(:requestId, :formalityId, :workFlowId, SYSDATE(), 1, :authorizationId)
					]]>
				</prop>	
			
				<prop key="GET_NEXT_CONSECUTIVE">
					<![CDATA[
						SELECT (IFNULL(MAX(CONSECUTIVE), 0) + 1) AS CONSECUTIVE
  						  FROM secopre.REQUEST_HISTORY
 						 WHERE REQUEST_ID = :requestId
					]]>
				</prop>	
	
				<prop key="GET_REQUEST_FIRST_WORKFLOW_CONFIG">
					<![CDATA[
						 SELECT WC.*
						   FROM secopre.WORKFLOW_CONFIG WC,
						   		secopre.REQUEST_CONFIG RC,
						   		secopre.WORKFLOW W
						  WHERE RC.REQUEST_ID = :requestId
						    AND WC.WF_CFG_CODE = :wfConfigCode
						    AND WC.WORKFLOW_ID = RC.WORKFLOW_ID
						    AND RC.WORKFLOW_ID = W.ID
						    AND WC.STAGE_CONFIG_ID = W.FIRST_STAGE_CFG
					]]>
				</prop>
				
				<prop key="INSERT_REQUEST_HISTORY">
					<![CDATA[
						 INSERT INTO secopre.REQUEST_HISTORY
						 (REQUEST_ID, CONSECUTIVE, WORKFLOW_CONFIG_ID, USER_ID, LAST_UPDATE, ACTIVE)
						 VALUES
						 (:requestId, :consecutive, :workFlowConfigId, :userId, SYSDATE(), 1)
					]]>
				</prop>
				
				<prop key="GET_FORMALITY_INBOX">
					<![CDATA[
						SELECT DISTINCT R.ID,
						 		R.FOLIO,
						 		R.JUSTIFICATION,
						 		DIST.ID DISTRICT,
						 		CONCAT('DTO-',DIST.NUMBER) DISTRICT_DESCRIPTION,
						 		RC.FORMALITY_ID,
						 		F.DESCRIPTION FORMALITY_DESCRIPTION,
						 		RH.WORKFLOW_CONFIG_ID,
						 		WC.STAGE_CONFIG_ID,
						 		ST.DESCRIPTION,
						 		WC.NEXT_STAGE_CONFIG,
						 		SC.PATH_ID,
						 		P.URL,
						 		SC.IS_CAPTURE,
						 		SC.IS_AUTHORIZATION,
						 		SC.CAPTURE_FORM,
						 		WC.STATUS_ID,
						 		S.DESCRIPTION NEXT_DESCRIPTION
						   FROM secopre.REQUEST R,
						   		secopre.REQUEST_HISTORY RH,
						   		secopre.REQUEST_CONFIG RC,
						   		secopre.FORMALITY F,
						   		secopre.WORKFLOW_CONFIG WC,
						   		secopre.STAGE_CONFIG SC0,
						   		secopre.STAGE_CONFIG SC,
						   		secopre.PATH P,
						   		secopre.STATUS S,
						   		secopre.STAGE_CONFIG_ROLE SCR,
						   		secopre.USER_ROLE UR,
						   		secopre.USER U,
						   		secopre.STAGE ST,
						   		secopre.DISTRICT DIST
						  WHERE R.ID = RH.REQUEST_ID
						    AND RH.ACTIVE = 1
						    AND R.ID = RC.REQUEST_ID
						    AND RC.FORMALITY_ID = F.ID
						    AND RH.WORKFLOW_CONFIG_ID = WC.ID
						    AND WC.ACTIVE = 1
						    AND WC.NEXT_STAGE_CONFIG = SC.ID
						    AND WC.STAGE_CONFIG_ID = SC0.ID
						    AND SC0.STAGE_ID = ST.ID
						    AND SC.PATH_ID = P.ID
						    AND WC.STATUS_ID = S.ID
						    AND SC.ID = SCR.STAGE_CONFIG_ID
						    AND SCR.ROLE_ID = UR.ROLE_ID
						    AND UR.USER_ID = U.ID
						    AND R.DISTRICT_ID = DIST.id
						    AND U.ID = :userId
					]]>
				</prop>
				
				<prop key="GET_REQUEST_WORKFLOW_CONFIG">
					<![CDATA[
						 SELECT WC.*
						   FROM secopre.WORKFLOW_CONFIG WC,
						   		secopre.REQUEST_CONFIG RC
						  WHERE RC.REQUEST_ID = :requestId
						    AND WC.WF_CFG_CODE = :wfConfigCode
						    AND WC.WORKFLOW_ID = RC.WORKFLOW_ID
						    AND WC.STAGE_CONFIG_ID = :stageConfigId
					]]>
				</prop>
				
				<prop key="INACTIVATE_ACTIVE_STAGE">
					<![CDATA[
						 UPDATE secopre.REQUEST_HISTORY
						    SET ACTIVE = 0
						  WHERE REQUEST_ID = :requestId
					]]>
				</prop>
				
				<prop key="GET_REQUEST_BY_ID">
					<![CDATA[
						SELECT R.ID AS REQUEST_ID,
							   R.FIRST_NAME,
						       R.PARENT_LAST_NAME,
							   R.MOTHER_LAST_NAME,
							   RD.MOVEMENT_NAME,
							   RD.MOVEMENT_PRICE
						  FROM secopre.REQUEST R,
						  	   secopre.REQUEST_DETAIL RD
						 WHERE R.ID = :requestId
						   AND R.ID = RD.REQUEST_ID
					]]>
				</prop>
				
				<prop key="INSERT_OR_UPDATE_REQUEST">
					<![CDATA[
						INSERT INTO secopre.REQUEST
						(ID, FOLIO, DISTRICT_ID, JUSTIFICATION, RESOURCE_PATH, LAST_UPDATE, ACTIVE)
						VALUES
						(:requestId, :folio, :districtId, :justification, :resourcePath,  SYSDATE(), 1)
						ON DUPLICATE KEY UPDATE RESOURCE_PATH = VALUES(RESOURCE_PATH)
					]]>
				</prop>
				
				<prop key="INSERT_OR_UPDATE_REQUEST_DETAIL">
					<![CDATA[
						INSERT INTO secopre.REQUEST_DETAIL
						(REQUEST_ID, MOVEMENT_NAME, MOVEMENT_PRICE, ACTIVE, LAST_UPDATE)
						VALUES
						(:requestId, :movementName, :movementPrice, 1, SYSDATE())
						ON DUPLICATE KEY UPDATE MOVEMENT_NAME = VALUES(MOVEMENT_NAME),
 												MOVEMENT_PRICE = VALUES(MOVEMENT_PRICE),
						       					LAST_UPDATE = VALUES(LAST_UPDATE)
					]]>
				</prop>
				
				<prop key="GET_REQUEST_CONFIG_BY_ID">
					<![CDATA[
						SELECT *
						  FROM secopre.REQUEST_CONFIG
						 WHERE REQUEST_ID = :requestId
					]]>
				</prop>
				
				<prop key="CAN_USER_AUTHORIZE">
					<![CDATA[
					SELECT COUNT(*) AS CAN_AUTHORIZE 
					  FROM secopre.AUTHORIZATION_CONFIG AC,
					  	   secopre.REL_USER_EMPLOYMENT RUE
					 WHERE AC.AUTHORIZATION_ID = :authorizationId
					   AND AC.STAGE_CONFIG_ID = :stageConfigId
					   AND AC.EMPLOYMENT_ID = RUE.EMPLOYMENT_ID
					   AND RUE.USER_ID = :userId		
					]]>
				</prop>
				
				<prop key="IS_USER_AUTHORIZATION_SUPERUSER">
					<![CDATA[
						SELECT COUNT(*) AS IS_SUPER_USER
						  FROM secopre.AUTHORIZATION A,
						  	   secopre.USER_ROLE UR
						 WHERE A.ID = :authorizationId
						   AND A.SUPER_USER_ROLE = UR.ROLE_ID
						   AND UR.USER_ID = :userId	
					]]>
				</prop>
				
				<prop key="HAS_MORE_SIGNATURES">
					<![CDATA[
						SELECT COUNT(*) HAS_MORE_SIGNATURE 
						  FROM secopre.WORKFLOW_CONFIG WC,
						  	   secopre.REQUEST_CONFIG RC
						 WHERE WC.WORKFLOW_ID = RC.WORKFLOW_ID
						   AND RC.REQUEST_ID = :requestId
						   AND WC.STAGE_CONFIG_ID = :stageConfigId
						   AND WC.WF_CFG_CODE = 'SIGFIRMA'
					]]>
				</prop>
	
			</props>				
		</property>
	</bean>
</beans>