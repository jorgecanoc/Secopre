-- QUERY PARA OBTENER LOS TRAMITES DISPONIBLES POR USUARIO

SELECT DISTINCT (T.ID) AS FORMALITY_ID, 
	T.F_DESC AS DESCRIPTION, 
	T.WORKFLOW_ID, 
	T.AUTHORIZATION_ID, 
	T.CODE, 
	T.CREATE_VALIDATION, 
	T.PROCESS_AFTER_CREATION FROM (
	SELECT F.ID,
		   F.DESCRIPTION F_DESC,
		   F.WORKFLOW_ID,
		   F.AUTHORIZATION_ID,
		   F.CODE,
		   F.CREATE_VALIDATION,
		   F.PROCESS_AFTER_CREATION
	  FROM secopre.FORMALITY F,
		   secopre.FORMALITY_ROLE FR,
		   secopre.ROLE R,
		   secopre.USER_ROLE UR
	 WHERE F.ID = FR.FORMALITY_ID
	   AND FR.ROLE_ID = R.ID
	   AND R.ID = UR.ROLE_ID
	   AND UR.USER_ID = :userId
	) T
							
-- QUERY QUE DICE QUE ROLES PUEDEN INICIAR UN TRAMITE

select F.ID, F.DESCRIPTION, R.ID, R.DESCRIPTION
  from secopre.FORMALITY F,
  	   secopre.formality_role FR,
  	   secopre.role R
 where F.ID = FR.FORMALITY_ID
   and FR.ROLE_ID = R.ID
   
-- QUERY DE LA BANDEJA TRAMITES

SELECT DISTINCT R.ID, R.FOLIO FOLIO, 
								(CASE WHEN R.EXPENSE_DESCRIPTION IS NOT NULL THEN CONCAT(R.JUSTIFICATION, ' - ', R.EXPENSE_DESCRIPTION) ELSE R.JUSTIFICATION END) AS JUSTIFICATION,
								R.RESOURCE_PATH, DIST.ID DISTRICT,
								CONCAT(STATE.NAME," (DTO-",DIST.NUMBER,")") DISTRICT_DESCRIPTION, RC.FORMALITY_ID,
								F.DESCRIPTION FORMALITY_DESCRIPTION, 
								(SELECT DESCRIPTION FROM secopre.MOVEMENT_TYPE 
								  WHERE ID = (
								  	CASE WHEN R.MOVEMENT_TYPE_ID IS NOT NULL AND R.MOVEMENT_TYPE_ID > 0 THEN R.MOVEMENT_TYPE_ID
								  	ELSE F.DEFAULT_MOV_TYPE
								  	END
								  )) AS TRANSACTION_TYPE,
								RH.WORKFLOW_CONFIG_ID,
								WC.STAGE_CONFIG_ID,
								(CASE WHEN R.MOVEMENT_TYPE_ID = 3 THEN
								(SELECT SUM(I.TOTAL_AMOUNT) FROM secopre.REQUEST_DETAIL I WHERE I.REQUEST_ID = R.ID AND I.MOVEMENT_TYPE_ID > 0)
								ELSE
								(SELECT SUM(TOTAL_AMOUNT) FROM secopre.REQUEST_DETAIL WHERE REQUEST_ID = R.ID) END) AS TOTAL_AMOUNT,
								--(SELECT SUM(TOTAL_AMOUNT) FROM secopre.REQUEST_DETAIL WHERE REQUEST_ID = R.ID) AS TOTAL_AMOUNT,
								(SELECT LAST_UPDATE FROM secopre.REQUEST_HISTORY WHERE CONSECUTIVE = 1 AND REQUEST_ID = R.ID) AS CREATION_DATE,
								ST.DESCRIPTION, WC.NEXT_STAGE_CONFIG, SC.PATH_ID, P.URL,
								SC.IS_CAPTURE, SC.IS_AUTHORIZATION,
								(CASE WHEN((SC.IS_CANCELED) OR (SC.IS_OPERATED))
									THEN 1 
									ELSE 0 
								END) AS IS_END_WORKFLOW,
								SC.IS_CANCELED,
								SC.IS_OPERATED,
								ifnull(SC.CAPTURE_FORM,"") CAPTURE_FORM,
								WC.STATUS_ID, S.DESCRIPTION NEXT_DESCRIPTION,
								R.LAST_UPDATE FOLIO_CREATION_DATE,
								(SELECT COUNT(*) FROM secopre.REQUEST_HISTORY IRH WHERE IRH.REQUEST_ID = R.ID AND IRH.COMMENTS IS NOT NULL) AS HAS_COMMENTS
						   FROM secopre.REQUEST R,
						   		secopre.REQUEST_HISTORY RH,
						   		secopre.REQUEST_CONFIG RC,
						   		secopre.FORMALITY F,
						   		secopre.WORKFLOW_CONFIG WC,
						   		secopre.STAGE_CONFIG SC0,
						   		secopre.STAGE_CONFIG SC,
						   		secopre.PATH P,
						   		secopre.STATUS S,
						   		secopre.STAGE_CONFIG_ROLE SCR,
						   		secopre.USER_ROLE UR,
						   		secopre.USER U,
						   		secopre.STAGE ST,
						   		secopre.DISTRICT DIST,
						   		secopre.DISTRICT_USER DU,
						   		secopre.STATE STATE
						  WHERE R.ID = RH.REQUEST_ID 							-- TODOS LOS FOLIOS Y SU HISTORIA
						    AND R.ACTIVE = 1									-- ACTIVOS
						    AND RH.ACTIVE = 1		 							-- FILTRO POR TRANSICION ACTIVA
						    AND R.ID = RC.REQUEST_ID  							-- JOIN CON LA CONFIGURACION
						    AND RC.FORMALITY_ID = F.ID							-- JOIN DE LA CONFIGURACION CON EL TRAMITE
						    AND RH.WORKFLOW_CONFIG_ID = WC.ID					-- JOIN A LA TRANSICION
						    AND WC.ACTIVE = 1									-- FILTRO TRANSICION ACTIVA
						    AND WC.NEXT_STAGE_CONFIG = SC.ID					-- JOIN CON CONFIGURACION DE SIGUIENTE ETAPA
						    AND WC.STAGE_CONFIG_ID = SC0.ID						-- JOIN CON CONFIGURACION DE ETAPA ACTUAL
						    AND SC0.STAGE_ID = ST.ID							-- JOIN CON ETAPA ACTUAL
						    AND SC.PATH_ID = P.ID								-- JOIN CON PATH DE CONFIGURACION DE SIGUIENTE ETAPA
						    AND WC.STATUS_ID = S.ID								-- JOIN CON ESTATUS DE TRANSICION
						    AND SC.ID = SCR.STAGE_CONFIG_ID						-- JOIN CON ROLE OWNER DE SIGUIENTE ETAPA
						    AND SCR.ROLE_ID = UR.ROLE_ID						-- JOIN CON ROLE
						    AND UR.USER_ID = U.ID								-- JOIN CON USER
						    AND R.DISTRICT_ID = DIST.ID							-- JOIN REQUEST CON DISTRITO
						    AND U.ID = :userId									-- ID USER
						    AND U.ID = DU.USER_ID								-- JOIN USER CON DISTRICTUSER
						    AND DIST.ID = DU.DISTRICT_ID						-- JOIN DISTRICT USER CON DISTRITO
						    AND DIST.STATE_ID = STATE.ID						-- JOIN DISTRICT CON STATE
						    AND YEAR(R.LAST_UPDATE) = YEAR(NOW())				-- SOLO ANIO ACTUAL
							AND MONTH(R.LAST_UPDATE) = MONTH(NOW())				-- SOLO MES ACTUAL
						    ORDER BY RH.LAST_UPDATE DESC
   
-- QUERY PARA OBTENER LOS ROLES DE USUARIO

select U.ID, U.NICKNAME, U.USERNAME, R.ID, R.ROLENAME, R.DESCRIPTION
  from secopre.user U,
       secopre.user_role UR,
       secopre.role R
 where U.USERNAME LIKE '%angelazul%'
   and U.ID = UR.USER_ID
   and UR.ROLE_ID = R.ID
   
-- QUERY PARA SABER EL GRUPO DE AUTORIZACIONES CORRESPONDIENTE AL TRAMITE
select f.id, 
	   f.description, 
	   f.WORKFLOW_ID, 
	   f.AUTHORIZATION_ID, 
	   a.DESCRIPTION, 
	   a.SUPER_USER_ROLE 
from secopre.formality f,
	 secopre.authorization a
where f.AUTHORIZATION_ID = a.id

-- QUERY PARA SABER EL DETALLE DE LA MATRIZ DE AUTORIZACIONES
-- PUESTOS QUE PUEDEN AUTORIZAR

select A.ID, 
	   A.DESCRIPTION GRP_AUTORIZACION, 
	   AC.STAGE_CONFIG_ID, 
	   SC.STAGE_ID, 
	   S.DESCRIPTION ETAPA, 
	   AC.POSITION_ID, 
	   P.DESCRIPTION PUESTO_AC, 
	   AC.level, 
	   AC.AUTH_AUT_CODE,
	   ACP.POSITION_ID,
	   ACPP.DESCRIPTION
  from secopre.AUTHORIZATION_CONFIG AC,
  	   secopre.authorization A,
  	   secopre.position P,
  	   secopre.stage_config SC,
  	   secopre.stage S,
  	   secopre.authorization_config_position ACP,
  	   secopre.position ACPP
 where A.ID = AC.AUTHORIZATION_ID
   and AC.POSITION_ID = P.ID
   and AC.STAGE_CONFIG_ID = SC.ID
   and SC.STAGE_ID = S.ID
   and AC.ID = ACP.AUTHORIZATION_CONFIG_ID
   and acp.POSITION_ID = acpp.id

-- QUERY PARA PREGUNTAR SI UN USUARIO PUEDE AUTORIZAR

SELECT COUNT(*) AS CAN_AUTHORIZE 
  FROM secopre.AUTHORIZATION_CONFIG AC,
	   secopre.USER U,
	   secopre.AUTHORIZATION_CONFIG_POSITION ACP
 WHERE AC.AUTHORIZATION_ID = :authorizationId
   AND AC.STAGE_CONFIG_ID = :stageConfigId
   AND AC.ID = ACP.AUTHORIZATION_CONFIG_ID
   AND ACP.POSITION_ID = U.POSITION_ID
   AND U.ID = :userId
   
-- QUERY PARA PREGUNTAR SI UN USUARIO ES SUPERUSUARIO DE UN TRAMITE

SELECT COUNT(*) AS IS_SUPER_USER
  FROM secopre.AUTHORIZATION A,
	   secopre.USER_ROLE UR
 WHERE A.ID = :authorizationId
   AND A.SUPER_USER_ROLE = UR.ROLE_ID
   AND UR.USER_ID = :userId	
   
-- QUERY PARA SABER SI UN USUARIO PUEDE CANCELAR UN TRAMITE EN CAPTURA
select COUNT(*) as TOTAL
  from secopre.FORMALITY_CANCEL_ROLE FCR,
	   secopre.USER_ROLE UR
 where UR.ROLE_ID = FCR.ROLE_ID
   and UR.USER_ID = :userId
   and FCR.FORMALITY_ID = :formalityId
   
-- QUERY PARA SABER QUE ROLES PUEDEN CANCELAR EN CAPTURA 

select F.ID, F.DESCRIPTION, R.ID, R.ROLENAME, R.DESCRIPTION
  from secopre.formality_cancel_role FCR,
  	   secopre.formality F,
  	   secopre.role R
 where FCR.FORMALITY_ID = F.ID
   and FCR.ROLE_ID = R.ID

   
-- EN LA MATRIZ DE AUTORIZACIONES. UN USUARIO PUEDE CANCELAR TRAMITE, REGRESAR A CAPTURA SI PUEDE AUTORIZAR O ES SUPERUSUARIO
-- SI PUEDE AUTORIZAR Y NO ES SUPERUSUARIO, AUTORIZA, AVANZA A SIGUIENTE FIRMA
-- SI ES SUPERUSUARIO, OPERA

-- EN LA CAPTURA, EL BOTON DE CANCELAR TRAMITE SE MUESTRA SOLAMENTE SI SE CUMPLE LO SIGUIENTE:
	-- SI ES UN GASTO
	-- SI SE CREO EN EL MES ACTUAL
	-- SI PUEDE EL USUARIO CANCELAR EL TRAMITE
	
-- query para traer las notificaciones

SELECT * FROM secopre.NOTIFICATION 
						where USER_ID = :userId 
						AND STATUS = 1
					    AND YEAR(CREATION_DATE) = YEAR(NOW())				-- SOLO ANIO ACTUAL
						AND MONTH(CREATION_DATE) = MONTH(NOW())				-- SOLO MES ACTUAL	
						
-- USUARIOS DE PRUEBA

INSERT INTO secopre.user
(ID, ACTIVE, EMAIL, HAS_CHAT_ACTIVE, NICKNAME, PASSWORD, USERNAME, PERSON_ID, POSITION_ID)
VALUES
(188, 1, 'pepegonzalez.hdz@gmail.com', 1, 'capturistaMov', '$2a$10$wvXkMdLjP3k.XFUeo9zHXORpU7DLCjeqgNGUuEIrcOsfEq5ZJmCvC', 'capturistaMov', 8, 3);

INSERT INTO secopre.USER_ROLE
(USER_ID, ROLE_ID)
VALUES
(188, -1),
(188, 1),
(188, 2);


-- 

SELECT SC1.ID,
	   S1.DESCRIPTION,
	   WC.WF_CFG_CODE,
       SC2.ID,
       S2.DESCRIPTION
  FROM secopre.WORKFLOW_CONFIG WC,
       secopre.STAGE_CONFIG SC1,
       secopre.STAGE_CONFIG SC2,
       secopre.STAGE S1,
       secopre.STAGE S2
 WHERE WC.WORKFLOW_ID = 1
   AND WC.STAGE_CONFIG_ID = SC1.ID
   AND SC1.STAGE_ID = S1.ID
   AND WC.NEXT_STAGE_CONFIG = SC2.ID
   AND SC2.STAGE_ID = S2.ID;